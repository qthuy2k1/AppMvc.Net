@using Microsoft.EntityFrameworkCore
@inject AppDbContext dbContext
@{
    ViewData["Title"] = "Thông tin DB";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var canConnect = dbContext.Database.CanConnect();

}

<partial name="_AlertMessage" />

<h2>Thông tin</h2>
<p>- Database: @dbName</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr />

<h2>Migrations</h2>
@foreach(var migration in dbContext.Database.GetAppliedMigrations()){
    <p>@migration</p>
}
@foreach(var migration in dbContext.Database.GetPendingMigrations()){
    <p>@migration (pending)</p>
}

@if(!canConnect){
    <p class="alert alert-danger">Không có khả năng kết nối đến database</p>
}

@if(dbContext.Database.GetPendingMigrations().Any()){
    <form method="post">
        <button type="submit" class="btn btn-success" asp-action="Migrate">Tạo Db (Cập nhật migration)</button>

    </form>
}


@if(canConnect){
    <h2>Các Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach(System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>

    <a class="btn btn-danger" asp-action="DeleteDb">Xóa Database: @dbName</a>
    <a class="btn btn-success" asp-action="SeedData">Seed Data</a>
}